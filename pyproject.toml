[project]
name = "mdform"
authors = [{ name = "HernÃ¡n E. Grecco", email = "hernan.grecco@gmail.com" }]
dynamic = ["version"]
license = { text = "BSD" }
description = "Parse Markdown form and generate useful templates and data."
readme = "README.md"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Topic :: Text Processing :: Markup :: HTML",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.11"
keywords = ["markdown", "form"]
dependencies = ["markdown>=3.0.1", "unidecode"]

[project.urls]
Homepage = "https://github.com/hgrecco/mdform"
Issues = "https://github.com/hgrecco/mdform/issues"

[project.entry-points."markdown.extensions"]
form = "mdform:FormExtension"

[tool.hatch.build]
packages = ["mdform"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = true }]

[tool.pytest.ini_options]
addopts = "--import-mode=importlib --doctest-modules"
doctest_optionflags = "NUMBER"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["I"]

[tool.pyright]
typeCheckingMode = "standard"
venv = "default"
venvPath = ".pixi/envs/"

[tool.pixi.project]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.environments]
lint = { features = ["lint", "test"], no-default-feature = true }
build = { features = ["build"], no-default-feature = true }
test = { features = ["test"], solve-group = "default" }
test-py311 = ["test", "py311"]
test-py312 = ["test", "py312"]
test-py313 = ["test", "py313"]

[tool.pixi.feature.lint.dependencies]
pre-commit = "*"
pre-commit-hooks = "*"
taplo = "*"
ruff = "*"
mdformat = "*"
mdformat-ruff = "*"
pyright = "*"

[tool.pixi.feature.lint.tasks]
pre-commit-install = "pre-commit install"
lint = "pre-commit run"
typecheck = "pyright"

[tool.pixi.feature.build.dependencies]
uv = "*"

[tool.pixi.feature.build.tasks]
build = "uv build"
publish = "uv publish"

[tool.pixi.feature.test.dependencies]
pytest = "*"

[tool.pixi.feature.test.pypi-dependencies]
mdform = { path = ".", editable = true }

[tool.pixi.feature.test.tasks]
test = "pytest --doctest-modules"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"
